language: node_js

notifications:
  email: false

node_js:
  - "12.18.2"

services:
  - redis-server
  
before_script:
  - cp -a .env.example .env

before_install:
  - if [ "$TRAVIS_BRANCH" == "master" ]; then
      openssl aes-256-cbc -K $encrypted_d810adeb7664_key -iv $encrypted_d810adeb7664_iv
        -in .travis/deploy_key.enc -out .travis/deploy_key -d;
    fi

install: npm install

jobs:
  include:
    # Run all tasks
    - stage: Tests
      if: |
        branch = develop AND \
        tag IS blank AND \
        commit_message !~ /(no-deploy|wip)/
      script:
        - npm run lint
        - npm run test:coverage
        - npm run test:coveralls
      after_success:
        - wget https://raw.githubusercontent.com/calendz/travis-discord-webhook/master/send.sh
        - chmod +x send.sh
        - ./send.sh success $DISCORD_WEBHOOK_URL
      after_failure:
        - wget https://raw.githubusercontent.com/calendz/travis-discord-webhook/master/send.sh
        - chmod +x send.sh
        - ./send.sh failure $DISCORD_WEBHOOK_URL

    # Build and push both versionned and current versions
    - stage: Build Docker image
      if: branch = master
      script:
      - "PACKAGE_VERSION=$(cat package.json | grep version | head -1 | awk -F: '{ print $2 }' | sed 's/[\",]//g' | tr -d '[[:space:]]')"
      - echo "==== Building calendz/api-calendar:$PACKAGE_VERSION ===="
      - echo "$DOCKER_PASSWORD" | docker login -u "$DOCKER_USERNAME" --password-stdin
      - docker build -t calendz/api-calendar .
      - docker images
      - docker tag calendz/api-calendar calendz/api-calendar:current
      - docker tag calendz/api-calendar calendz/api-calendar:${PACKAGE_VERSION}
      - docker push calendz/api-calendar:current
      - docker push calendz/api-calendar:${PACKAGE_VERSION}

    # Deploy latest API-CALENDAR version
    - stage: Deploy
      if: branch = master
      script:
        - sh .travis/deploy.sh

cache:
  directories:
    - node_modules